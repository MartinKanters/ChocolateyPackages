name: Update maven-snapshot Chocolatey package
on:
  push: 
    branches: 'test-fix'
jobs:
  update-package:
    runs-on: windows-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure Git
        run: |
          git config --global user.email "martinkanters@noreply.github.com"
          git config --global user.name "Martin Kanters"

      - name: Update package if needed
        shell: bash
        run: |
          # Inspired by https://github.com/mthmulders/homebrew-maven-snapshot/blob/master/Formula/maven-snapshot.rb
          cd maven-snapshot/
          base_snapshot_url="https://repository.apache.org/content/groups/snapshots/org/apache/maven/apache-maven"
          base_snapshot_version=$(curl -s "$base_snapshot_url/maven-metadata.xml" | xmllint -xpath '//metadata/versioning/latest/text()' -)
          
          snapshot_artifact=$(curl -s "$base_snapshot_url/$base_snapshot_version/maven-metadata.xml" | xmllint -xpath "/metadata/versioning/snapshotVersions/snapshotVersion[./classifier='bin' and ./extension='tar.gz']" -)
          newest_snapshot_version=$(echo "$snapshot_artifact" | xmllint -xpath "./snapshotVersion/value/text()" -)
          newest_snapshot_timestamp=$(echo "$snapshot_artifact" | xmllint -xpath "./snapshotVersion/updated/text()" -)
          
          last_persisted_build_timestamp=$(cat last-build.txt)
          
          if [ "$last_persisted_build_timestamp" == "$newest_snapshot_timestamp" ]; then
          echo "No new successful Maven master build detected, nothing to do"
          else
            echo "Found new successful snapshot artifact timestamp: ${newest_snapshot_timestamp}, old: ${last_persisted_build_timestamp}"
            zip_artifact_url="$base_snapshot_url/$base_snapshot_version/apache-maven-${newest_snapshot_version}-bin.zip"
            zip_hash=$(curl -s "$zip_artifact_url" | sha256sum | awk '{print $1}')
            escaped_zip_artifact_url=$(printf '%s\n' "$zip_artifact_url" | sed -e 's/[\/&]/\\&/g')
            package_version=${newest_snapshot_timestamp:0:8}.${newest_snapshot_timestamp:8}
            m2_home_dir="apache-maven-${base_snapshot_version}"
          
            echo "Setting checksum to: ${zip_hash}"
            sed -i 's/$checksum =.*/$checksum = \"'${zip_hash}'\"/' tools/chocolateyinstall.ps1
            echo "Setting artifact url to: ${zip_artifact_url}"
            sed -i 's/$url =.*/$url = \"'${escaped_zip_artifact_url}'\"/' tools/chocolateyinstall.ps1
            echo "Setting m2_home dir to ${m2_home_dir}"
            sed -i 's/$m2_home =.*/$m2_home = Join-Path $package \"apache-maven-'${m2_home_dir}'\"/' tools/chocolateyinstall.ps1
            echo "Setting package version to: ${package_version}"
            sed -i 's/    <version>.*/    <version>'${package_version}'<\/version>/' maven-snapshot.nuspec
            echo "$newest_snapshot_timestamp" > last-build.txt
          
            echo "NEW_PACKAGE_VERSION=$package_version" >> $GITHUB_ENV
            echo "M2_HOME_DIR_NAME=$m2_home_dir" >> $GITHUB_ENV
          fi
          
      - name: Choco pack and install
        shell: powershell
        env:
          CHOCOLATEY_PACKAGE_API_KEY: ${{ secrets.CHOCOLATEY_PACKAGE_API_KEY }}
          NEW_PACKAGE_VERSION: ${{ env.NEW_PACKAGE_VERSION }}
          M2_HOME_DIR_NAME: ${{ env.M2_HOME_DIR_NAME }}
        run: |
          git diff --quiet
          if ($LASTEXITCODE -eq 1) {
            cd maven-snapshot
            
            $orig_mvn_version = mvn -v | Select -First 1
            write-host "Currently installed maven: $orig_mvn_version"
            
            write-host "Choco pack"
            choco pack
            
            write-host "Installing Maven snapshot"
            choco install maven-snapshot -y --no-progress -s .
            
            # Unfortunately choco's `refreshenv` does not work in Github Actions
            $mvn_path = "C:\ProgramData\chocolatey\lib\maven-snapshot\$M2_HOME_DIR_NAME\bin\mvn.cmd"
            $mvn_snapshot_version = & "$mvn_path" -v | Select -First 1
            write-host "Maven-snapshot installed: $mvn_snapshot_version"
            
            if ($orig_mvn_version -eq $mvn_snapshot_version) {
              write-host "Error: Maven Snapshot version is identical to the original Maven version"
              exit 1
            }
            
            
            exit 0
          } else {
            echo "No git changes detected, nothing to do"
          }
         
      # - name: Persist changes
      #   shell: powershell
      #   run: |
      #     git diff --quiet
      #     if ($LASTEXITCODE -eq 1) {
      #       git commit -am "Update to latest Maven snapshot"
      #       git remote add github "https://${env:GITHUB_ACTOR}:${env:GITHUB_TOKEN}@github.com/${env:GITHUB_REPOSITORY}.git"
      #       git push github HEAD:${env:GITHUB_REF}
      #       exit 0
      #     } else {
      #       echo "No git changes detected, nothing to do"
      #     }
