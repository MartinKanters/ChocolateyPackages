name: Update maven-snapshot Chocolatey package
#on:
#  schedule:
#    - cron:  '0 * * * *'
on: [push]
jobs:
  update-package:
    runs-on: windows-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure Git
        run: |
          git config --global user.email "martinkanters@noreply.github.com"
          git config --global user.name "Martin Kanters"

      - name: Update package if needed
        shell: bash
        run: |
          cd maven-snapshot/
          base_jenkins_url="https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/master/"
          last_successful_build=$(curl -s "${base_jenkins_url}/api/json" | jq '.lastSuccessfulBuild')
          
          last_persisted_build_number=$(cat last-build.txt)
          last_successful_build_number=$(echo $last_successful_build | jq '.number')
          
          if [ "$last_persisted_build_number" == "$last_successful_build_number" ]; then
            echo "No new successful Maven master build detected, nothing to do"
          else
            echo "Found new successful Jenkins build: ${last_successful_build_number}, old: ${last_persisted_build_number}"
            successful_build_url=$(echo $last_successful_build | jq -r '.url')
            zip_artifact_path=$(curl -s "${successful_build_url}api/json" | jq -r '.artifacts[]|select(.fileName | test("^apache-maven-\\d.*-bin\\.zip$"))|.relativePath')
            zip_artifact_url="${successful_build_url}artifact/${zip_artifact_path}"
            zip_hash=$(curl -s "$zip_artifact_url" | sha256sum | awk '{print $1}')
            new_package_version=$(date +'%Y%m%d.%H%M')
            escaped_zip_artifact_url=$(printf '%s\n' "$zip_artifact_url" | sed -e 's/[\/&]/\\&/g')
            
            echo "Setting checksum to: ${zip_hash}"
            sed -ir 's/$checksum =.*/$checksum = \"'${zip_hash}'\"/' tools/chocolateyinstall.ps1
            echo "Setting artifact url to: ${zip_artifact_url}"
            sed -ir 's/$url =.*/$url = \"'${escaped_zip_artifact_url}'\"/' tools/chocolateyinstall.ps1
            echo "Setting package version to: ${new_package_version}"
            sed -ir 's/    <version>.*/    <version>'${new_package_version}'<\/version>/' maven-snapshot.nuspec
            echo $last_successful_build_number > last-build.txt
          fi

      - name: Choco pack and test
        shell: bash
        run: |
          if ! git diff --quiet
          then
            echo "Detected git changes, will pack and install maven-snapshot"
            cd maven-snapshot
            
            orig_mvn_version=$(mvn -v | head -n 1)
            echo "Currently installed maven: $orig_mvn_version"
            
            echo "Choco pack"
            choco pack
            
            echo "Installing Maven snapshot"
            choco install maven-snapshot -y -s .
            set M2_HOME="C:\ProgramData\chocolatey\lib\maven-snapshot"
            set PATH=%M2_HOME%\bin;%PATH%
            mvn -v
            mvn_snapshot_version=$(mvn -v | head -n 1)
            
            if [[ "$mvn_snapshot_version" != Apache* ]]; then
              echo "Error: First line of snapshot mvn -v is not valid, is it installed correctly?"
              exit 1
            fi
            if [ "$orig_mvn_version" == "$mvn_snapshot_version" ]; then
              echo "Error: Maven Snapshot version is identical to the original Maven version"
              exit 1
            fi
            
            echo "Uninstalling Maven snapshot"
            choco uninstall maven-snapshot -y
          else
            echo "No git changes detected, nothing to do"
          fi
         
      - name: Persist changes
        shell: bash
        run: |
          #git status
          #git diff
          #git commit -am "Update to latest Maven snapshot" || exit 0
          #git remote add github "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
          #git push github HEAD:${GITHUB_REF}