name: Update maven-snapshot Chocolatey package
on:
  schedule:
    - cron:  '0 * * * *'
jobs:
  update-package:
    runs-on: windows-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure Git
        run: |
          git config --global user.email "martinkanters@noreply.github.com"
          git config --global user.name "Martin Kanters"

      - name: Update package if needed
        shell: bash
        run: |
          cd maven-snapshot/
          base_jenkins_url="https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/master/"
          last_successful_build=$(curl -s "${base_jenkins_url}/api/json" | jq '.lastSuccessfulBuild')
          
          last_persisted_build_number=$(cat last-build.txt)
          last_successful_build_number=$(echo $last_successful_build | jq '.number')
          
          if [ "$last_persisted_build_number" == "$last_successful_build_number" ]; then
            echo "No new successful Maven master build detected, nothing to do"
          else
            echo "Found new successful Jenkins build: ${last_successful_build_number}, old: ${last_persisted_build_number}"
            successful_build_url=$(echo $last_successful_build | jq -r '.url')
            zip_artifact_path=$(curl -s "${successful_build_url}api/json" | jq -r '.artifacts[]|select(.fileName | test("^apache-maven-\\d.*-bin\\.zip$"))|.relativePath')
            zip_artifact_url="${successful_build_url}artifact/${zip_artifact_path}"
            zip_hash=$(curl -s "$zip_artifact_url" | sha256sum | awk '{print $1}')
            new_package_version=$(date +'%Y%m%d.%H%M')
            escaped_zip_artifact_url=$(printf '%s\n' "$zip_artifact_url" | sed -e 's/[\/&]/\\&/g')
            
            echo "Setting checksum to: ${zip_hash}"
            sed -i 's/$checksum =.*/$checksum = \"'${zip_hash}'\"/' tools/chocolateyinstall.ps1
            echo "Setting artifact url to: ${zip_artifact_url}"
            sed -i 's/$url =.*/$url = \"'${escaped_zip_artifact_url}'\"/' tools/chocolateyinstall.ps1
            echo "Setting package version to: ${new_package_version}"
            sed -i 's/    <version>.*/    <version>'${new_package_version}'<\/version>/' maven-snapshot.nuspec
            echo $last_successful_build_number > last-build.txt

            echo "NEW_PACKAGE_VERSION=$new_package_version" >> $GITHUB_ENV
          fi
          
      - name: Choco pack and install
        shell: powershell
        env:
          CHOCOLATEY_PACKAGE_API_KEY: ${{ secrets.CHOCOLATEY_PACKAGE_API_KEY }}
          NEW_PACKAGE_VERSION: ${{ env.NEW_PACKAGE_VERSION }}
        run: |
          git diff --quiet
          if ($LASTEXITCODE -eq 1) {
            cd maven-snapshot
            
            $orig_mvn_version = mvn -v | Select -First 1
            write-host "Currently installed maven: $orig_mvn_version"
            
            write-host "Choco pack"
            choco pack
            
            write-host "Installing Maven snapshot"
            choco install maven-snapshot -y --no-progress -s .
            
            # Unfortunately choco's `refreshenv` does not work in Github Actions
            $mvn_snapshot_version = C:\ProgramData\chocolatey\lib\maven-snapshot\apache-maven\bin\mvn.cmd -v | Select -First 1
            write-host "Maven-snapshot installed: $mvn_snapshot_version"
            
            if ($orig_mvn_version -eq $mvn_snapshot_version) {
              write-host "Error: Maven Snapshot version is identical to the original Maven version"
              exit 1
            }
            
            choco apikey --key $env:CHOCOLATEY_PACKAGE_API_KEY --source https://push.chocolatey.org/
            choco push maven-snapshot.${env:NEW_PACKAGE_VERSION}.nupkg --source https://push.chocolatey.org/
            
            exit 0
          } else {
            echo "No git changes detected, nothing to do"
          }
         
      - name: Persist changes
        shell: powershell
        run: |
          git diff --quiet
          if ($LASTEXITCODE -eq 1) {
            git commit -am "Update to latest Maven snapshot"
            git remote add github "https://${env:GITHUB_ACTOR}:${env:GITHUB_TOKEN}@github.com/${env:GITHUB_REPOSITORY}.git"
            git push github HEAD:${env:GITHUB_REF}
            exit 0
          } else {
            echo "No git changes detected, nothing to do"
          }
